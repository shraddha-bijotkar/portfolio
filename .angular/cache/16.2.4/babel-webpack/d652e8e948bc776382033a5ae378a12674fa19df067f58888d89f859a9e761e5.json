{"ast":null,"code":"import * as __NgCli_bootstrap_1 from \"@angular/platform-browser\";\nimport './polyfills';\nimport { AppModule } from './app/app.module';\n__NgCli_bootstrap_1.platformBrowser().bootstrapModule(AppModule).then(ref => {\n  // Ensure Angular destroys itself on hot reloads.\n  // if (window['ngRef']) {\n  //   window['ngRef'].destroy();\n  // }\n  // window['ngRef'] = ref;\n  // Otherwise, log the boot error\n}).catch(err => console.error(err));","map":{"version":3,"names":["AppModule","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","then","ref","catch","err","console","error"],"sources":["P:\\portfolio-clone\\portfolio\\src\\main.ts"],"sourcesContent":["import './polyfills';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .then((ref) => {\n    // Ensure Angular destroys itself on hot reloads.\n    // if (window['ngRef']) {\n    //   window['ngRef'].destroy();\n    // }\n    // window['ngRef'] = ref;\n    // Otherwise, log the boot error\n  })\n  .catch((err) => console.error(err));\n"],"mappings":";AAAA,OAAO,aAAa;AAKpB,SAASA,SAAS,QAAQ,kBAAkB;AAE5CC,mBAAA,CAAAC,eAAA,EAAwB,CACrBC,eAAe,CAACH,SAAS,CAAC,CAC1BI,IAAI,CAAEC,GAAG,IAAI;EACZ;EACA;EACA;EACA;EACA;EACA;AAAA,CACD,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}